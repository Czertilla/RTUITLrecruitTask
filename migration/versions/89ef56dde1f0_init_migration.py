"""init migration

Revision ID: 89ef56dde1f0
Revises: 
Create Date: 2024-03-20 23:59:36.099896

"""
from typing import Sequence, Union

from alembic import op
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '89ef56dde1f0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('car_owners',
    sa.Column('car_number', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('tg', sa.String(), nullable=True),
    sa.Column('vk', sa.String(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('car_number')
    )
    op.create_table('dependencies',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value_type', sa.String(), nullable=False),
    sa.Column('enclosure', sa.Uuid(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('field_attrs', sa.JSON(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['enclosure'], ['dependencies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('changed', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('wallet', sa.Float(), nullable=False),
    sa.Column('skill', sa.Integer(), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('violations',
    sa.Column('violation_type', sa.String(), nullable=False),
    sa.Column('fine', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('violation_type')
    )
    op.create_table('cameras',
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('cam_type', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['cam_type'], ['dependencies.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cases',
    sa.Column('transport', sa.String(), nullable=False),
    sa.Column('photo_id', sa.Uuid(), nullable=True),
    sa.Column('owner_id', sa.Uuid(), nullable=True),
    sa.Column('camera_id', sa.Uuid(), nullable=False),
    sa.Column('violation_id', sa.Uuid(), nullable=False),
    sa.Column('violation_value', sa.String(), nullable=False),
    sa.Column('skill_value', sa.Integer(), nullable=False),
    sa.Column('case_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('status_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['camera_id'], ['cameras.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['car_owners.id'], ),
    sa.ForeignKeyConstraint(['photo_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['violation_id'], ['violations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('votes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('case_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('case_id', 'user_id', name='idx_case_user_constraint')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('cases')
    op.drop_table('cameras')
    op.drop_table('violations')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('files')
    op.drop_table('dependencies')
    op.drop_table('car_owners')
    # ### end Alembic commands ###
